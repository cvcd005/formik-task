{"version":3,"sources":["MyForm/MyTextInput.jsx","MyForm/MyCheckbox.jsx","MyForm/index.js","MyForm/MyForm.jsx","ContentWrapper/index.js","ContentWrapper/ContentWrapper.jsx","Api/Api.js","App/App.jsx","App/index.js","index.jsx"],"names":["MyTextInput","label","props","useField","field","meta","className","htmlFor","id","name","touched","error","MyCheckbox","children","type","MyForm","xs","sm","onSubmit","handleSubmit","placeholder","min","render","arrayHelpers","array","values","skills","length","push","htmlType","onClick","map","friend","index","key","style","marginRight","disabled","shape","size","remove","reverse","ContentWrapper","test","user","a","axios","post","response","submit","setSubmitting","resetForm","setFieldError","App","initialValues","password","passwordConfirmation","email","website","age","acceptedTerms","validationSchema","Yup","max","required","matches","oneOf","url","of","obj","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3734f64c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useField} from 'formik';\r\nimport {Row, Input} from 'antd';\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <Row className=\"text-input\">\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <Input  {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MyTextInput;","import React from 'react';\r\nimport {useField} from 'formik';\r\nimport { Checkbox} from 'antd';\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: 'checkbox' });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <Checkbox  {...field} {...props}>\r\n          {children}\r\n        </Checkbox>\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyCheckbox;","import MyForm from \"./MyForm\";\r\n\r\nexport default MyForm;\r\n","import React from 'react';\r\nimport { Form,  FieldArray, Field, ErrorMessage } from 'formik';\r\nimport { Col,  Button} from 'antd';\r\n\r\nimport MyTextInput from './MyTextInput';\r\nimport MyCheckbox from './MyCheckbox';\r\n\r\nconst MyForm = (props) => {\r\n\r\n    return (\r\n      <Col className=\"text-input\" xs={20} sm={16}>\r\n        <Form onSubmit={props.handleSubmit} className=\"MyForm\">\r\n        \r\n        <MyTextInput\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Vasay\"\r\n        />\r\n        <MyTextInput\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n        />\r\n        <MyTextInput\r\n          label=\"Password Confirmation\"\r\n          name=\"passwordConfirmation\"\r\n          type=\"password\"\r\n          placeholder=\"confirm password\"\r\n        />\r\n            <MyTextInput\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"jane@formik.com\"\r\n            />\r\n            <ErrorMessage name=\"Email\">{123}</ErrorMessage>\r\n             <MyTextInput\r\n              label=\"Website\"\r\n              name=\"website\"\r\n              type=\"url\"\r\n              placeholder=\"http://www.site.com\"\r\n            />\r\n            <MyTextInput\r\n              label=\"Age\"\r\n              name=\"age\"\r\n              type=\"number\"\r\n              min={0}\r\n            />\r\n    \r\n        \r\n        <FieldArray\r\n         \r\n          name=\"skills\"\r\n          render={arrayHelpers => { \r\n                const array = props.values.skills;\r\n                if (array.length === 0) {\r\n                  array.push('');\r\n                }\r\n                return (\r\n                <>\r\n                {'Skills'}\r\n                <div className=\"skillsWrapper\">\r\n                  \r\n                  <Button className=\"btn-add\" htmlType=\"button\" type=\"button\" onClick={() => array[array.length - 1].length > 0  ? arrayHelpers.push('') : 0   }>     \r\n                    Add a Skill\r\n                  </Button>  \r\n                  {array.map((friend, index) => (\r\n                    <div key={index} style={{marginRight: '20px'}}>\r\n                      <Field className=\"skill\" name={`skills.${index}`} disabled={index === (array.length - 1) ? false: true} /> \r\n                      {index === (array.length - 1) ? null : <Button shape=\"circle\" size=\"small\" htmlType=\"button\" onClick={() => arrayHelpers.remove(index) }>                \r\n                      x\r\n                      </Button>}\r\n                    </div>\r\n                  )).reverse()}\r\n                                   \r\n                 \r\n               \r\n                </div>\r\n                </>\r\n                )\r\n                }\r\n              }\r\n            />\r\n        <MyCheckbox name=\"acceptedTerms\">\r\n              I accept the terms and conditions\r\n            </MyCheckbox>\r\n           \r\n                    <Button type=\"submit\" htmlType=\"submit\" >Submit</Button>\r\n                 \r\n      </Form>\r\n    </Col>\r\n    )\r\n}\r\n\r\nexport default MyForm;","import ContentWrapper from \"./ContentWrapper\";\r\n\r\nexport default ContentWrapper;\r\n","import React from 'react';\r\n\r\nconst ContentWrapper = (props) => {\r\n  const {children} = props;\r\n  return (\r\n    <div className=\"contentWrapper\">\r\n    {children}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContentWrapper;","import axios from \"axios\";\r\n\r\nexport const obj = {\r\n  Name: \"vasay\",\r\n  Password: \"pupkin123T\",\r\n  PasswordConfirmation: \"pupkin123T\",\r\n  Email: \"asdf@mail.ru\",\r\n  Website: \"\",\r\n  Age: 19,\r\n  Skills: [\"\"],\r\n  AcceptedTerms: true\r\n};\r\n\r\nconst test = async user => {\r\n  const response = await axios.post(\"http://localhost:5000/sign-up\", user);\r\n  return response;\r\n\r\n  /* try {\r\n    const response = await axios.post(\"http://localhost:5000/sign-up\", obj);\r\n    console.log(response.data);\r\n  }\r\n  catch (error) {\r\n    console.log('user exist');\r\n  } */\r\n};\r\n\r\nexport default test;\r\n\r\n/* axios.post('/user', {\r\n  firstName: 'Fred',\r\n  lastName: 'Flintstone'\r\n})\r\n.then(function (response) {\r\n  console.log(response);\r\n})\r\n.catch(function (error) {\r\n  console.log(error);\r\n}); */\r\n","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, useField, FieldArray, Field } from 'formik';\r\nimport { Button } from  'antd';\r\nimport axios from \"axios\";\r\n\r\nimport MyForm from '../MyForm';\r\nimport ContentWrapper from '../ContentWrapper';\r\n\r\nimport test, {obj }from '../Api/Api'\r\n\r\nimport './App.scss';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\n\r\nconst submit = async (values, { setSubmitting, resetForm, setFieldError }) => {\r\n  try {\r\n    const response = await test(values);\r\n    resetForm();\r\n    setSubmitting(false);\r\n  }\r\n  catch (error) {\r\n    setFieldError('email', 'User with same email is already exist');\r\n  }\r\n};\r\n         \r\n\r\nconst App = () => {\r\n   \r\n    return (\r\n      <ContentWrapper>\r\n     \r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            password: '',\r\n            passwordConfirmation: '',\r\n            email: '',\r\n            website: '',\r\n            age: 0,\r\n            skills: [],\r\n            acceptedTerms: false, // added for our checkbox\r\n          }}\r\n          validationSchema={Yup.object({\r\n            name: Yup.string()\r\n              .max(50, 'Must 50 characters or less')\r\n              .required('You must enter Name'),\r\n            password: Yup.string()\r\n              .min(8, 'Password is too short - should be 8 chars minimum.')\r\n              .max(40, 'Must be 40 characters or less')\r\n              .matches(/[0-9]+/, 'Password must contain at least one digit')\r\n              .matches(/[A-Z]+/, 'Password must contain an one uppercase character')\r\n              .matches(/^[a-zA-Z0-9]{8,}$/, 'Password have only latin letters and digits')\r\n              .required('You must enter password'),\r\n            passwordConfirmation: Yup.string()\r\n              .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n              .required('You must confirm password'),\r\n            email: Yup.string()\r\n              .email('Invalid email address')\r\n              .required('You must enter email'),\r\n            website: Yup.string()\r\n              .url('Mustbe a valid url'),\r\n            age: Yup.number('Must be an integer')\r\n              .min(18, 'Must be in range of 18 and 65')\r\n              .max(65, 'Must be in range of 18 and 65')\r\n              .required('You must enter your age'),\r\n            skills: Yup.array()\r\n              .of(Yup.string()),\r\n            acceptedTerms: Yup.boolean()\r\n              .required('Required')\r\n              .oneOf([true], 'You must accept the terms and conditions.'),\r\n          })}\r\n          onSubmit={submit}\r\n         \r\n          \r\n    \r\n\r\n        >\r\n         \r\n          {obj => <MyForm {...obj} />}\r\n         \r\n          \r\n        </Formik>\r\n     \r\n     </ContentWrapper>\r\n    );\r\n\r\n};\r\n\r\nexport default App;","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}